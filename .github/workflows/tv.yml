name: Selective Sync

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC 0点同步
  workflow_dispatch:     # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout current repo
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.SYNC_TOKEN }}
        path: repo
        fetch-depth: 0
        ref: main  # 明确指定分支

    - name: Backup protected files
      run: |
        mkdir -p /tmp/sync-backup
        if [ -f "repo/README.md" ]; then
          cp repo/README.md /tmp/sync-backup/README.bak
        fi
        if [ -f "repo/DISCLAIMER.md" ]; then
          cp repo/DISCLAIMER.md /tmp/sync-backup/DISCLAIMER.bak
        fi

    - name: Add upstream remote
      run: |
        cd repo
        git remote add upstream https://github.com/cluntop/tvbox.git || true

    - name: Fetch upstream changes
      run: |
        cd repo
        git fetch upstream

    - name: Merge upstream changes
      run: |
        cd repo
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git reset --hard upstream/main  # 确保分支匹配
        
        # 强制覆盖保护文件（稍后恢复）
        git checkout HEAD -- README.md DISCLAIMER.md || true

    - name: Restore protected files
      run: |
        if [ -f "/tmp/sync-backup/README.bak" ]; then
          cp /tmp/sync-backup/README.bak repo/README.md
        fi
        if [ -f "/tmp/sync-backup/DISCLAIMER.bak" ]; then
          cp /tmp/sync-backup/DISCLAIMER.bak repo/DISCLAIMER.md
        fi
        
        cd repo
        git add README.md DISCLAIMER.md || true

    - name: Check for changes
      id: check_changes
      run: |
        cd repo
        git status --porcelain
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        cd repo
        git add -A
        git commit -m "Auto-sync: $(date +'%Y-%m-%d %H:%M')"
        git push origin main --force

    - name: Cleanup
      run: rm -rf /tmp/sync-backup
